name: Build ICS Feeds (polite + Bandsintown)

on:
  schedule:
    - cron: '25 10 * * *'   # runs daily at 10:25 UTC
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

env:
  PYTHONUNBUFFERED: "1"
  TZ: "America/New_York"
  FEEDS_DEBUG: "1"
  FEEDS_PW_HEADLESS: "1"
  # EVENTBRITE_TOKEN: ${{ secrets.EVENTBRITE_TOKEN }}
  # BANDSINTOWN_APP_ID: ${{ secrets.BANDSINTOWN_APP_ID }}

jobs:
  build:
    runs-on: ubuntu-22.04   # ← pin to 22.04 to avoid the deps detection issue
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Python deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Install Node (only for Playwright's installer)
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # Install Playwright browsers + OS deps via Node (works for Python too)
      - name: Install Playwright browsers and deps
        run: |
          npx -y playwright@latest install --with-deps chromium

      - name: Build calendars
        run: |
          mkdir -p docs data data/debug
          : > docs/.nojekyll

          python src/main.py

          ls -l docs || true
          if ! ls docs/*.ics >/dev/null 2>&1; then
            echo "No .ics generated; creating placeholder files"
            for f in family adult recurring sports; do echo "" > "docs/$f.ics"; done
          fi

          if [ ! -f docs/index.html ]; then
            {
              echo '<!doctype html><meta charset="utf-8">'
              echo '<title>Calendars</title>'
              echo '<h1>Calendars</h1>'
              echo '<ul>'
              echo '  <li><a href="family.ics">family.ics</a></li>'
              echo '  <li><a href="adult.ics">adult.ics</a></li>'
              echo '  <li><a href="recurring.ics">recurring.ics</a></li>'
              echo '  <li><a href="sports.ics">sports.ics</a></li>'
              echo '</ul>'
            } > docs/index.html
          fi

      - name: Upload debug artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: debug
          path: |
            data/debug
            data/cache.json
          if-no-files-found: ignore
          retention-days: 7

      - name: Configure Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./docs

  deploy:
    needs: build
    runs-on: ubuntu-22.04
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
